You are building a modern e-commerce website using React (JSX/TSX) + TailwindCSS.

The website has two main parts:
1. User side (customers).
2. Admin side (for the client to manage products).

=========================
üåê USER SIDE FEATURES
=========================
- Home page: hero banner, featured products, categories.
- Product listing page: grid of products with filters (category, price).
- Product detail page: image gallery, description, price, add-to-cart button.
- Cart page: show products, change quantity, remove item, total price.
- Checkout page: basic form (name, address, phone).
- Loading animations:
  ‚Ä¢ Global loader (shopping cart/bag animation).
  ‚Ä¢ Skeleton loaders for product grids and product details.
- Transitions & animations:
  ‚Ä¢ Smooth page transitions.
  ‚Ä¢ Hover effects on product cards & buttons.
  ‚Ä¢ Micro-interactions for add-to-cart.

=========================
üõ†Ô∏è ADMIN SIDE FEATURES
=========================
- Login page (Firebase or Supabase Auth with email/password).
- Dashboard: show total products, total orders, recent activity.
- Product management (CRUD):
  ‚Ä¢ Add new product (title, description, price, stock, category, image upload).
  ‚Ä¢ Edit or delete products.
  ‚Ä¢ Table view of products (with search + sort).
- Orders management: list user orders, update status (Pending ‚Üí Shipped ‚Üí Delivered).
- Settings page: update store name/logo and contact info.

=========================
üì¶ DATABASE MODELS
=========================
- Products: { id, title, description, price, stock, category, imageUrl, createdAt }
- Orders: { id, userId, items[], total, status, createdAt }
- Users: { id, name, email, role (user/admin) }

=========================
üé® UI/UX REQUIREMENTS
=========================
- Design theme: white, gray, black (modern and minimal).
- Use TailwindCSS + Heroicons.
- Responsive layout (mobile to desktop).
- Framer Motion for page transitions and component animations.
- Include skeleton loaders and a global loading animation.
- Clean, modern UI with proper spacing and typography.

=========================
üîí CLIENT REQUIREMENTS
=========================
- Client is non-technical: must be able to log in, add/edit/delete products, upload images, and manage orders without touching code.
- Database must properly store products and product images.
- Admin routes must be protected (only logged-in admins can access).

=========================
üìÇ PROJECT STRUCTURE
=========================
src/
  components/   ‚Üí Navbar, Footer, ProductCard, Loader, Modal, Toast
  pages/        ‚Üí User pages
  admin/        ‚Üí Admin pages
  context/      ‚Üí Cart context
  hooks/        ‚Üí Custom hooks

=========================
üìÑ DELIVERABLES
=========================
1. Fully working React + Tailwind project.
2. User part (shop with cart & checkout).
3. Admin part (login, dashboard, CRUD for products, orders management).
4. Database integration (Firebase Firestore + Storage OR Supabase).
5. Documentation for client (markdown file explaining how to log in and use admin features).

=========================
‚ö° FINAL INSTRUCTION
=========================
Generate a production-ready React (JSX/TSX) + Tailwind + Firebase/Supabase e-commerce website with all the above features, modern UI/UX, animations, transitions, and a loading animation suitable for selling websites.
